apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'


version ="1.2.0"
group = "com.pangge"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
}

def siteUrl = 'https://github.com/qiuuu/MyTestIndicator'
def gitUrl = 'https://github.com/qiuuu/MyTestIndicator.git'
def module_name = 'parsecity'



task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs //通过from函数指定代码源，这里是默认代码源
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs //source指定了代码源
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

//这里dependsOn意为仅当generateJavadocs完成后才开始本task
task generateJavadocsJar(type: Jar, dependsOn: generateJavadocs) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}


install{
    repositories.mavenInstaller{

        pom{
            project{

                packaging 'aar'
                name 'parsecity-debug'
                url siteUrl
                licenses{
                    license{

                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'


                    }
                }
                developers{
                    developer{

                        id 'hellosong1'
                        name 'hellosong1'
                        email 'hellosongworld1@gmail'
                    }
                }
                scm{
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }

            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    // 读取配置文件中的用户名和key
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"		// 你在bintray上创建的库的名称
        name = module_name // 在jcenter中的项目名称
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}
